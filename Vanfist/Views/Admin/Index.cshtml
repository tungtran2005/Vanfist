
@{
    ViewData["Title"] = "Admin Dashboard";
    var admin = ViewBag.Admin;
    var initial = string.IsNullOrWhiteSpace((string)admin.FirstName) ? "A" : ((string)admin.FirstName).Substring(0, 1).ToUpperInvariant();
}

<link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />

<div class="container-fluid my-4">
    <div class="row g-4">
        <!-- Sidebar -->
        <div class="col-12 col-lg-3">
            <div class="card shadow-sm mb-3">
                <div class="card-body d-flex align-items-center">
                    <div class="avatar-circle me-3">@initial</div>
                    <div>
                        <div class="text-muted">Xin chào,</div>
                        <div class="fw-semibold">@admin.FirstName @admin.LastName</div>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-white fw-semibold">Quản lý hệ thống</div>
                <ul class="list-group list-group-flush small">
                    <li class="list-group-item"><a href="#" class="text-decoration-none section-link" data-section="users">Người dùng</a></li>
					<li class="list-group-item"><a href="#" class="text-decoration-none section-link" data-section="transactions">Quản lý đơn hàng</a></li>
                    <li class="list-group-item"><a href="#" class="text-decoration-none section-link" data-section="products">Sản phẩm</a></li>
                    <li class="list-group-item"><a href="#" class="text-decoration-none section-link" data-section="reports">Báo cáo</a></li>
                    <li class="list-group-item"><a href="#" class="text-decoration-none section-link" data-section="settings">Cấu hình</a></li>
                    <li class="list-group-item">
                        <form asp-controller="Auth" asp-action="Logout" method="post" class="m-0 p-0">
                            <button type="submit" class="btn btn-link p-0 text-decoration-none">Đăng xuất</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Content -->
        <div class="col-12 col-lg-9">
            <!-- Users -->
            <div id="section-users" class="card shadow-sm content-section">
                <div class="card-header bg-white fw-semibold">Quản lý người dùng</div>
                <div class="card-body">
                    <div class="text-muted">Danh sách người dùng sẽ hiển thị ở đây.</div>
                </div>
            </div>

            <!-- Orders -->
			<div id="section-transactions" class="card shadow-sm content-section" style="display:none;">
				<div class="card-header bg-white fw-semibold">Đơn hàng</div>
				<div class="card-body" id="transactionsContainer">
				</div>
			</div>


            <!-- Products -->
            <div id="section-products" class="card shadow-sm content-section" style="display:none;">
                <div class="card-header bg-white fw-semibold">Quản lý sản phẩm</div>
                <div class="card-body">
                    <div class="text-muted">Danh sách sản phẩm sẽ hiển thị ở đây.</div>
                </div>
            </div>

            <!-- Reports -->
            <div id="section-reports" class="card shadow-sm content-section" style="display:none;">
                <div class="card-header bg-white fw-semibold">Báo cáo</div>
                <div class="card-body">
                    <div class="text-muted">Coming soon</div>
                </div>
            </div>

            <!-- Settings -->
            <div id="section-settings" class="card shadow-sm content-section" style="display:none;">
                <div class="card-header bg-white fw-semibold">Cấu hình hệ thống</div>
                <div class="card-body">
                    <div class="text-muted">Coming soon</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const links = document.querySelectorAll('.section-link');
			const sections = document.querySelectorAll('.content-section');

			function showSection(name) {
				sections.forEach(s => s.style.display = 'none');
				const el = document.getElementById(`section-${name}`);
				if (el) el.style.display = '';
			}

			links.forEach(link => {
				link.addEventListener('click', function (e) {
					e.preventDefault();
					const section = this.getAttribute('data-section');
					showSection(section);

					if (section === "transactions") {
						loadTransactions();
					}
				});
			});

			// Default section
			showSection('personal');
			const form = document.getElementById('changePasswordForm');
			if (form) {
				const newPwd = form.querySelector('#NewPassword');
				const confirmPwd = form.querySelector('#ConfirmPassword');
				const submitBtn = form.querySelector('#btnChangePasswordSubmit');
				const help = document.getElementById('ConfirmPasswordHelp');

				function validatePasswordsMatch() {
					const match = confirmPwd.value.length > 0 && newPwd.value === confirmPwd.value;
					if (!match) {
						help.classList.remove('d-none');
						confirmPwd.setCustomValidity('Mật khẩu xác nhận không khớp.');
						submitBtn.disabled = true;
					} else {
						help.classList.add('d-none');
						confirmPwd.setCustomValidity('');
						submitBtn.disabled = false;
					}
				}

				newPwd.addEventListener('input', validatePasswordsMatch);
				confirmPwd.addEventListener('input', validatePasswordsMatch);

				form.addEventListener('submit', function (e) {
					validatePasswordsMatch();
					if (!form.checkValidity()) {
						e.preventDefault();
						e.stopPropagation();
						form.reportValidity();
					}
				});

				validatePasswordsMatch();
			}
		});
	</script>
	<script>
		$(document).ready(function () {
			$("#transactionsContainer").load("/Invoice/GetPagedInvoicePartial");
		});
		function loadInvoicePage(page) {
			$("#transactionsContainer").load(`/Invoice/GetPagedInvoicePartial?page=${page}`);
		}

		function deleteInvoice(id) {
			if (!confirm("Bạn có chắc muốn xóa hóa đơn #" + id + " không?")) return;

			$.ajax({
				url: '/Invoice/DeleteInvoice',
				type: 'POST',
				data: { id: id },
				success: function (res) {
					if (res.success) {
						alert(res.message);
						$("#transactionsContainer").load('/Invoice/GetPagedInvoicePartial');
					} else {
						alert(res.message);
					}
				},
				error: function () {
					alert("Lỗi trong quá trình xóa hóa đơn!");
				}
			});
		}
		function updateInvoiceStatus(invoiceId, Status, Type) {
			$.ajax({
				url: '/Invoice/UpdateInvoice',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify({
					invoiceId: invoiceId,
					status: Status,
					type: Type
				}),
				success: function (res) {
					if (res.success) {
						alert(res.message);
						loadInvoicePage(1);
					} else {
						alert(res.message);
					}
				},
				error: function () {
					alert('Có lỗi xảy ra khi cập nhật!');
				}
			});
		}

	</script>
}